Based on m5


	Step 1
	------
	Create ec2 instance 
		"pick ubuntu"
		use this as the developer environment
		open ports
			22
			8080
			80

	Step 2
	------
	login to ubuntu box.
	sudo apt update
	sudo apt upgrade
	sudo apt install awscli
	aws configure

----------------------------
or skip both above and do the following
	create amazon instance and open relevant ports 
	aws configure


	Step 3
	------
	Goto IAM
	Create role - say "ec2cicdrole"
		ec2 role (all ec2 instances to call aws services)
		Give 
			AWSCodeCommitFullAccess
			AWSCodeDeployFullAccess
			AWSCodePipelineFullAccess
			Cloudwatchfullaccess
			AmazonS3FullAccess (artifact is stored in s3)
			
	Attach this role to the ec2 instance
		ec2 instance -> Actions -> "Security" -> Modify IAM Role

		

	To use /opt as the base directroy
	sudo su
	mkdir code
	sudo chown ubuntu:ubuntu -R /opt
	ls -ltr
		confirm ubuntu has ownership.
		

	
m6
--
	Step 4
	-------
	Code Commit
	Go to code commit
	Create a repository
		name: helloworld
		many things are restricted for root user for security reasons.
		Instead we should create seperate users.
		Also explains the step we should follow
		
	Step 5
	-------
	Goto IAM	
	Create a new user called "vilas"
		give 
			"AWS management console access"
			"Programmatic"
		Give "AdministratorAccess" policy
		
	

m7
--
	Step 6
	------
	install git 
	register ssh public key
	ssh-keygen
		/home/ubuntu/.ssh/codecommit_rsa
	cd /home/ubuntu/.ssh/codecommit_rsa
	cat public and private key
	
	Back on console
	login as vilas
	Go back to the user vilas that we created.
		in "Summary" page - click on "Security Credentials"
		Click "Upload SSH public key"
			a public key would be generated.
			
		
		back in terminal
		cd ~/.ssh/config
		Follow the instructions on https://us-east-2.console.aws.amazon.com/codesuite/codecommit/repositories/vilasrepo/setup?region=us-east-2
			above url includes the repo name you create. so you need click on your repo. to reach here.
		and https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-unixes.html
		in case of failures 
			https://docs.aws.amazon.com/codecommit/latest/userguide/troubleshooting-ssh.html
	
	This is what i did (for back in terminal)
		As stated above generate public/private key and uploading public key
		vi ~/.ssh/config
--------------------
Host git-codecommit.*.amazonaws.com : <Looks like a static id>
  User <SSH key ID from console and NOT Access key ID from console>
  IdentityFile ~/.ssh/cicd : <private key file name>
--------------------
	chmod 600 config
	
	ssh git-codecommit.us-east-2.amazonaws.com
	ssh Your-SSH-Key-ID@git-codecommit.us-east-2.amazonaws.com
		should authenticate successfully.
		connection would be closed after that.

	git clone ssh://<SSH key ID from cosole>@git-codecommit.us-east-2.amazonaws.com/v1/repos/vilasrepo
	git clone ssh://@git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo my-demo-repo
	N.B: git clone https may fail.

CodeCommit commands
-------------------
	cd /opt
	mkdir vilas
	cd vilas
	git clone https://github.com/vilasvarghese/docker-k8s
	cp -R src /opt/code/vilasrepo
	cp pom.xml /opt/code/vilasrepo
	
	cd /opt/code/vilasrepo
	git add .
	git commit -m "java repo"
	git push origin master


m8
--

m9 CodeBuild Principles
-----------------------		
	https://tutorialsdojo.com/aws-codebuild/
	https://blog.opstree.com/2020/10/27/how-to-implement-ci-cd-using-aws-codebuild-codedeploy-and-codepipeline/
		


CodeCommit commands
-------------------
	cd /opt
	mkdir vilas
	cd vilas
	git clone https://github.com/vilasvarghese/docker-k8s
	cp -R src /opt/code/vilasrepo
	cp pom.xml /opt/code/vilasrepo


Codebase synch commands
	mkdir /opt/temp
	cd /opt/temp
	To be executed on your local laptop
	scp -i your.pem HelloWorld-CodeBase.tar.gz ubuntu@PUBLIC-IP:/opt/temp
	tar -zxf HelloWorld-CodeBase.tar.gz
	cd HelloWorld
	rm -rf .git
	rsync -r /opt/temp/HelloWorld/ /opt/helloworld
	cd /opt/helloworld
	rm -rf /opt/temp
	Git commands

	cd /opt/helloworld
	git add .
	git status
	git commit -a -m “First commit”
	git push origin master


CodeDeploy commands
---------------------
	CodeDeploy agent installation (Prod EC2 instance)

	sudo chown ubuntu:ubuntu -R /opt
	cd /opt
	sudo apt install ruby -y
	cd /opt
	Execute any one command (demonstrating two possible options)
	wget https://aws-codedeploy-us-west-2.s3.amazonaws.com/latest/install (Links to an external site.)Links to an external site.
	wget https://aws-codedeploy-us-west-2.s3.us-west-2.amazonaws.com/latest/install (Links to an external site.)Links to an external site.
	chmod +x ./install
	sudo ./install auto
	After installation steps

	Stop and start (multiple times) and then you will see the service running

	sudo service codedeploy-agent status
	sudo service codedeploy-agent stop
	sudo service codedeploy-agent start
	Agent logs

	tail -30 /var/log/aws/codedeploy-agent/codedeploy-agent.log
	
	


	